#!/bin/bash

LOG_DIR="logs"
LOG_FILE="$LOG_DIR/demo_run.log"

# Create logs directory if it doesn't exist
mkdir -p $LOG_DIR

echo "üöÄ Starting RAG for Robotic Decision-Making Demo üöÄ" | tee $LOG_FILE

# 1Ô∏è‚É£ Install Dependencies
echo "üì¶ Checking and installing dependencies..." | tee -a $LOG_FILE
if [ -f "requirements.txt" ]; then
    pip install -r requirements.txt | tee -a $LOG_FILE
else
    echo "‚ùå requirements.txt not found. Exiting..." | tee -a $LOG_FILE
    exit 1
fi

# 2Ô∏è‚É£ Check if the Fine-Tuned RAG Model Exists
if [ ! -d "models/rag_finetuned" ]; then
    echo "‚ùå Fine-tuned RAG model not found. Training required." | tee -a $LOG_FILE
    echo "üîÑ Running RAG Model Fine-Tuning..." | tee -a $LOG_FILE
    python src/train_rag.py | tee -a $LOG_FILE
else
    echo "‚úÖ Fine-tuned RAG model found. Skipping training..." | tee -a $LOG_FILE
fi

# 3Ô∏è‚É£ Run FAISS Indexing
echo "üîç Running FAISS Indexing for Knowledge Retrieval..." | tee -a $LOG_FILE
python src/faiss_indexer.py | tee -a $LOG_FILE

if [ $? -ne 0 ]; then
    echo "‚ùå FAISS Indexing failed. Exiting..." | tee -a $LOG_FILE
    exit 1
fi

echo "‚úÖ FAISS Indexing completed successfully!" | tee -a $LOG_FILE

# 4Ô∏è‚É£ Start the ROS API for Robotic Integration
echo "ü§ñ Launching ROS API..." | tee -a $LOG_FILE
roslaunch rag_robot_interface start.launch &>> $LOG_FILE &  
ROS_PID=$!
sleep 5  # Give ROS time to initialize

# Check if ROS successfully started
if ps -p $ROS_PID > /dev/null; then
    echo "‚úÖ ROS API started successfully!" | tee -a $LOG_FILE
else
    echo "‚ùå Failed to start ROS API. Exiting..." | tee -a $LOG_FILE
    exit 1
fi

# 5Ô∏è‚É£ Run Query Testing for RAG-Based Robotics
echo "üß† Running Query Testing..." | tee -a $LOG_FILE
python src/inference.py | tee -a $LOG_FILE

if [ $? -ne 0 ]; then
    echo "‚ùå Query Testing failed. Exiting..." | tee -a $LOG_FILE
    exit 1
fi

echo "‚úÖ Query Testing completed successfully!" | tee -a $LOG_FILE

# 6Ô∏è‚É£ Run Evaluation (BLEU Score, Recall@K)
echo "üìä Evaluating Model Performance..." | tee -a $LOG_FILE
python src/evaluation.py | tee -a $LOG_FILE

if [ $? -ne 0 ]; then
    echo "‚ùå Evaluation failed. Exiting..." | tee -a $LOG_FILE
    exit 1
fi

echo "‚úÖ Evaluation completed successfully!" | tee -a $LOG_FILE
echo "üéØ Demo Completed Successfully!" | tee -a $LOG_FILE
