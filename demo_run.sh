#!/bin/bash

LOG_DIR="logs"
LOG_FILE="$LOG_DIR/demo_run.log"

mkdir -p $LOG_DIR

echo "üöÄ Starting RAG for Robotic Decision-Making Demo (ROS2 Humble) üöÄ" | tee $LOG_FILE

# 1Ô∏è‚É£ Install Dependencies
echo "üì¶ Checking and installing dependencies..." | tee -a $LOG_FILE
if [ -f "requirements.txt" ]; then
    pip install -r requirements.txt | tee -a $LOG_FILE
else
    echo "‚ùå requirements.txt not found. Exiting..." | tee -a $LOG_FILE
    exit 1
fi

# 2Ô∏è‚É£ Source ROS2 Humble Environment
source /opt/ros/humble/setup.bash  # ‚úÖ Updated for Humble

# 3Ô∏è‚É£ Build & Install ROS2 Package (if not built)
echo "üîß Checking ROS2 package build status..." | tee -a $LOG_FILE
if [ ! -d "install/rag_robot_interface" ]; then
    echo "üî® Building ROS2 package..." | tee -a $LOG_FILE
    colcon build --packages-select rag_robot_interface | tee -a $LOG_FILE
else
    echo "‚úÖ ROS2 package already built. Skipping build..." | tee -a $LOG_FILE
fi

source install/setup.bash  # ‚úÖ Source ROS2 workspace

# 4Ô∏è‚É£ Check if Fine-Tuned RAG Model Exists
if [ ! -d "models/rag_finetuned" ]; then
    echo "‚ùå Fine-tuned RAG model not found. Training required." | tee -a $LOG_FILE
    echo "üîÑ Running RAG Model Fine-Tuning..." | tee -a $LOG_FILE
    python src/train_rag.py | tee -a $LOG_FILE
else
    echo "‚úÖ Fine-tuned RAG model found. Skipping training..." | tee -a $LOG_FILE
fi

# 5Ô∏è‚É£ Run FAISS Indexing
echo "üîç Running FAISS Indexing for Knowledge Retrieval..." | tee -a $LOG_FILE
python src/faiss_indexer.py | tee -a $LOG_FILE

if [ $? -ne 0 ]; then
    echo "‚ùå FAISS Indexing failed. Exiting..." | tee -a $LOG_FILE
    exit 1
fi

echo "‚úÖ FAISS Indexing completed successfully!" | tee -a $LOG_FILE

# 6Ô∏è‚É£ Build Knowledge Graph
echo "üìÇ Building Knowledge Graph..." | tee -a $LOG_FILE
python src/knowledge_graph.py | tee -a $LOG_FILE

# 7Ô∏è‚É£ Start the ROS2 NLP Node
echo "ü§ñ Launching ROS2 NLP Node..." | tee -a $LOG_FILE
ros2 launch rag_robot_interface robot_nlp_launch.py &>> $LOG_FILE &
sleep 5  # Give ROS2 time to initialize

# 8Ô∏è‚É£ Verify ROS2 Node is Running
if ros2 node list | grep -q "robot_nlp_interface"; then
    echo "‚úÖ ROS2 NLP Node started successfully!" | tee -a $LOG_FILE
else
    echo "‚ùå Failed to start ROS2 NLP Node. Exiting..." | tee -a $LOG_FILE
    exit 1
fi

# 9Ô∏è‚É£ Run Query Testing
echo "üß† Running Query Testing..." | tee -a $LOG_FILE
python src/inference.py | tee -a $LOG_FILE

if [ $? -ne 0 ]; then
    echo "‚ùå Query Testing failed. Exiting..." | tee -a $LOG_FILE
    exit 1
fi

echo "‚úÖ Query Testing completed successfully!" | tee -a $LOG_FILE

# üîü Run Evaluation
echo "üìä Evaluating Model Performance..." | tee -a $LOG_FILE
python src/evaluation.py | tee -a $LOG_FILE

if [ $? -ne 0 ]; then
    echo "‚ùå Evaluation failed. Exiting..." | tee -a $LOG_FILE
    exit 1
fi

echo "‚úÖ Evaluation completed successfully!" | tee -a $LOG_FILE
echo "üéØ Demo Completed Successfully!" | tee -a $LOG_FILE
